{"version":3,"sources":["Components/common/formControls/FormsControls.jsx","utils/validators/validators.js","hoc/withAuthRedirect.jsx","Components/Dialogs/DialogItem.jsx","Components/Dialogs/Message.jsx","Components/Dialogs/Dialogs.jsx","Components/Dialogs/DialogsContainer.jsx"],"names":["FormControl","_ref","input","_ref$meta","meta","touched","error","children","areasDiv","useRef","hasError","current","classList","add","remove","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","ref","id","className","Textarea","props","restProps","child","Object","c_Users_podol_OneDrive_work_React_Study_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0__","assign","Input","createField","placeholder","name","validators","component","type","text","arguments","length","undefined","redux_form__WEBPACK_IMPORTED_MODULE_3__","validate","__webpack_require__","d","__webpack_exports__","required","maxLenghtCreator","value","maxLenght","lenght","concat","mapStateToPropsForRedirect","state","isAuth","auth","withAuthRedirect","Component","RedirectComponent","_React$Component","c_Users_podol_OneDrive_work_React_Study_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","this","c_Users_podol_OneDrive_work_React_Study_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__","c_Users_podol_OneDrive_work_React_Study_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__","apply","c_Users_podol_OneDrive_work_React_Study_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_4__","c_Users_podol_OneDrive_work_React_Study_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_1__","key","react__WEBPACK_IMPORTED_MODULE_5___default","react_router_dom__WEBPACK_IMPORTED_MODULE_6__","to","React","connect","DialogItem","path","react_default","react_router_dom","Message","message","maxLenght50","AddMessageFormRedux","reduxForm","form","onSubmit","handleSubmit","Field","Dialogs","dialogsPage","createRef","dialogs","map","dialog","Dialogs_DialogItem","messages","Dialogs_Message","sendMessageText","react_router","DialogsContainer","compose","dialogsReducer","updateNewMessageText"],"mappings":"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","file":"static/js/5.23ba801c.chunk.js","sourcesContent":["import React, { useRef } from 'react'\r\nimport styles from './formControll.scss'\r\nimport { Field } from 'redux-form';\r\n\r\nexport const FormControl = ({ input, meta: {touched, error}, children }) => {\r\n  const areasDiv = useRef(null)\r\n  const hasError = touched && error\r\n\r\n  hasError && areasDiv.current && areasDiv.current.classList.add('error')\r\n  !hasError && areasDiv.current && areasDiv.current.classList.remove('error')\r\n\r\n  return (\r\n    <div ref={areasDiv} id='areasDiv' className='formControl' >\r\n      <div>\r\n        {children}\r\n      </div>\r\n      {hasError && <span>{error}</span>}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport const Textarea = (props) => {\r\n  const { input, meta, child, ...restProps } = props\r\n  return <FormControl {...props} >\r\n    <textarea {...input} {...restProps} />\r\n  </FormControl>\r\n}\r\n\r\nexport const Input = (props) => {\r\n  const { input, meta, child, ...restProps } = props\r\n  return <FormControl {...props} >\r\n    <input {...input} {...restProps} />\r\n  </FormControl>\r\n}\r\n\r\nexport const createField = (placeholder, name, validators, component, type, text = '') => (\r\n  <div>\r\n    <Field component={component} name={name} placeholder={placeholder}\r\n      type={type} validate={validators} />{text}\r\n  </div>\r\n\r\n)","export const required = value => {\r\n  if (value) {\r\n    return undefined\r\n  }\r\n  return 'field is required'\r\n}\r\n\r\nexport const maxLenghtCreator = (maxLenght) => (value) => {\r\n  if (value.lenght > maxLenght) {\r\n    return `Max lengt is ${maxLenght} symb`\r\n  }\r\n  return undefined\r\n}","import React from 'react'\r\nimport { Redirect } from 'react-router-dom'\r\nimport { connect } from 'react-redux';\r\n\r\nlet mapStateToPropsForRedirect = (state) => ({\r\n  isAuth: state.auth.isAuth\r\n})\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n  class RedirectComponent extends React.Component {\r\n    render() {\r\n      if(!this.props.isAuth) return <Redirect to={'/login'}/>\r\n      return <Component {...this.props}/>\r\n\r\n    }\r\n  }\r\n\r\n\r\n  let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect) (RedirectComponent)\r\n\r\n  return ConnectedAuthRedirectComponent\r\n}","import React from 'react'\r\nimport {NavLink} from 'react-router-dom'\r\n\r\nconst DialogItem = (props) =>{\r\n  let path = \"/dialogs/\" + props.id;\r\n  return(\r\n    <div className='dialog'>\r\n      <NavLink to={path}>{props.name}</NavLink>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default DialogItem","import React from 'react'\r\n\r\nconst Message = (props) => {\r\n  return(\r\n    <div className=\"message\">{props.message.message}</div>\r\n  )\r\n}\r\n\r\nexport default Message","import React from 'react'\r\nimport DialogItem from './DialogItem'\r\nimport Message from './Message'\r\nimport { Redirect } from 'react-router-dom'\r\nimport { Field, reduxForm } from 'redux-form';\r\nimport { Textarea } from './../common/formControls/FormsControls';\r\nimport { required, maxLenghtCreator } from '../../utils/validators/validators';\r\n\r\nconst maxLenght50 = maxLenghtCreator(50)\r\n\r\nconst AddMessageForm = (props) => {\r\n  return (\r\n    <div className=\"enterText\">\r\n      <form onSubmit={props.handleSubmit}>\r\n        <Field component={Textarea} placeholder=\"Enter\" name=\"newMessageBody\"\r\n        validate={[required, maxLenght50]} />\r\n        <button>Send</button>\r\n      </form>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst AddMessageFormRedux = reduxForm({form: 'dialogs=add-message-form'})(AddMessageForm)\r\n\r\n\r\nconst Dialogs = props => {\r\n  let state = props.dialogsPage\r\n\r\n  let sendMessage = () => {\r\n    props.sendMessageText()\r\n  }\r\n\r\n  let onMessageChange = () => {\r\n    let newMessage = messageRef.current.value\r\n    props.updateNewMessageText(newMessage)\r\n  }\r\n\r\n  let messageRef = React.createRef()\r\n\r\n  if (!props.isAuth) return <Redirect to={'/login'} />\r\n\r\n  return (\r\n    <div className=\"dialogs\">\r\n      {/* Dialogs */}\r\n      <div className=\"dialogs-items\">\r\n        {state.dialogs.map(dialog => <DialogItem name={dialog.name} id={dialog.id} />)}\r\n      </div>\r\n      <div className=\"messages\">\r\n        {state.messages.map(message => <Message message={message} />)}\r\n        <AddMessageFormRedux onSubmit={sendMessage}/>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\nexport default Dialogs","import React from 'react'\r\nimport { sendMessageText, updateNewMessageText } from '../../redux/dialogsReducer';\r\nimport Dialogs from './Dialogs';\r\nimport { connect } from 'react-redux';\r\nimport { withAuthRedirect } from '../../hoc/withAuthRedirect';\r\nimport { compose } from 'redux';\r\n\r\nlet mapStateToProps = (state) => {\r\n  return{\r\n    dialogsPage: state.dialogsReducer,\r\n  }\r\n}\r\n\r\nlet DialogsContainer = compose(\r\n  connect(mapStateToProps, {sendMessageText, updateNewMessageText}),\r\n  withAuthRedirect\r\n)(Dialogs)\r\n\r\n// let AuthRedirectComponent = withAuthRedirect(Dialogs)\r\n\r\n// const DialogsContainer = connect(mapStateToProps, {sendMessageText, updateNewMessageText})(AuthRedirectComponent)\r\n\r\nexport default DialogsContainer"],"sourceRoot":""}